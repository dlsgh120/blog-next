{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\workspace\\\\blog\\\\blog-nextjs\\\\components\\\\blog\\\\create\\\\tuiEditorWrapper.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Editor } from '@toast-ui/react-editor';\nexport default (props => /*#__PURE__*/_jsxDEV(Editor, _objectSpread(_objectSpread({}, props), {}, {\n  ref: props.forwardedRef\n}), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 5\n}, this));","map":{"version":3,"sources":["D:/workspace/blog/blog-nextjs/components/blog/create/tuiEditorWrapper.tsx"],"names":["React","Editor","props","forwardedRef"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAkC,wBAAlC;AAMA,gBAAgBC,KAAD,iBACX,QAAC,MAAD,kCAAYA,KAAZ;AAAmB,EAAA,GAAG,EAAEA,KAAK,CAACC;AAA9B;AAAA;AAAA;AAAA;AAAA,QADJ","sourcesContent":["import React from 'react';\r\nimport {Editor, EditorProps} from '@toast-ui/react-editor';\r\n\r\nexport interface TuiEditorWithForwardedProps extends EditorProps{\r\n    forwardedRef?: React.MutableRefObject<Editor>;\r\n}\r\n\r\nexport default (props: TuiEditorWithForwardedProps) =>(\r\n    <Editor {...props} ref={props.forwardedRef} />\r\n);"]},"metadata":{},"sourceType":"module"}