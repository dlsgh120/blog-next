{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\workspace\\\\blog\\\\blog-nextjs\\\\containers\\\\user\\\\joinContainer.tsx\",\n    _dec,\n    _class,\n    _temp;\n\nimport React from 'react';\nimport JoinComponent from '../../components/user/join';\nimport { inject, observer } from 'mobx-react';\nlet JoinContainer = (_dec = inject('userStore'), _dec(_class = observer(_class = (_temp = class JoinContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.userStore = this.props.userStore;\n\n    this.checkId = async email => {\n      await this.userStore.checkId(email);\n    };\n\n    this.createUser = async (email, password, name, phone) => {\n      await this.userStore.createUser(email, password, name, phone);\n\n      if (this.userStore.success[\"CREATE_USER\"]) {// alert('회원가입이 완료되었습니다.');\n        // router.push('/login');\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.userStore.initUserInfo();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(JoinComponent, {\n      checkId: this.checkId,\n      checkIdStatus: this.userStore.checkIdStatus,\n      createUser: this.createUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}, _temp)) || _class) || _class);\nexport default JoinContainer;","map":{"version":3,"sources":["D:/workspace/blog/blog-nextjs/containers/user/joinContainer.tsx"],"names":["React","JoinComponent","inject","observer","JoinContainer","Component","userStore","props","checkId","email","createUser","password","name","phone","success","componentDidMount","initUserInfo","render","checkIdStatus"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;IAUMC,a,WAFLF,MAAM,CAAC,WAAD,C,gBACNC,Q,mBADD,MAEMC,aAFN,SAE4BJ,KAAK,CAACK,SAFlC,CAEkD;AAAA;AAAA;AAAA,SACtCC,SADsC,GAC1B,KAAKC,KAAL,CAAWD,SADe;;AAAA,SAO9CE,OAP8C,GAOpC,MAAOC,KAAP,IAAuB;AAC7B,YAAM,KAAKH,SAAL,CAAeE,OAAf,CAAuBC,KAAvB,CAAN;AACH,KAT6C;;AAAA,SAW9CC,UAX8C,GAWjC,OAAMD,KAAN,EAAoBE,QAApB,EAAqCC,IAArC,EAAkDC,KAAlD,KAAkE;AAC3E,YAAM,KAAKP,SAAL,CAAeI,UAAf,CAA0BD,KAA1B,EAAiCE,QAAjC,EAA2CC,IAA3C,EAAiDC,KAAjD,CAAN;;AACA,UAAG,KAAKP,SAAL,CAAeQ,OAAf,CAAuB,aAAvB,CAAH,EAAyC,CACrC;AACA;AACH;AACJ,KAjB6C;AAAA;;AAG9CC,EAAAA,iBAAiB,GAAE;AACf,SAAKT,SAAL,CAAeU,YAAf;AACH;;AAaDC,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,aAAD;AACI,MAAA,OAAO,EAAE,KAAKT,OADlB;AAEI,MAAA,aAAa,EAAE,KAAKF,SAAL,CAAeY,aAFlC;AAGI,MAAA,UAAU,EAAE,KAAKR;AAHrB;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA1B6C,C;AA6BlD,eAAeN,aAAf","sourcesContent":["import React from 'react';\nimport JoinComponent from '../../components/user/join';\nimport {inject, observer} from 'mobx-react';\nimport UserStore from '../../stores/users';\n// import router from 'next/router';\n\ninterface Props{\n    userStore?:UserStore;\n}\n\n@inject('userStore')\n@observer\nclass JoinContainer extends React.Component<Props>{\n    private userStore = this.props.userStore as UserStore;\n\n    componentDidMount(){\n        this.userStore.initUserInfo();\n    }\n    \n    checkId = async (email:string) =>{\n        await this.userStore.checkId(email);\n    }\n\n    createUser = async(email:string, password:string, name:string, phone:string) =>{\n        await this.userStore.createUser(email, password, name, phone);\n        if(this.userStore.success[\"CREATE_USER\"]){\n            // alert('회원가입이 완료되었습니다.');\n            // router.push('/login');\n        }\n    }\n    render(){\n        return(\n            <JoinComponent \n                checkId={this.checkId}\n                checkIdStatus={this.userStore.checkIdStatus}\n                createUser={this.createUser}\n            />\n        );\n    }\n}\n\nexport default JoinContainer;"]},"metadata":{},"sourceType":"module"}