{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\workspace\\\\blog\\\\containers\\\\user\\\\loginContainer.tsx\",\n    _dec,\n    _class,\n    _temp;\n\nimport React from 'react';\nimport LoginComponent from '../../components/user/login';\nimport { inject, observer } from 'mobx-react';\nlet LoginContainer = (_dec = inject('testStore'), _dec(_class = observer(_class = (_temp = class LoginContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.testStore = this.props.testStore;\n  }\n\n  componentDidMount() {\n    this.testStore.getApiData();\n  }\n\n  render() {\n    console.log(this.testStore.apiData);\n    return /*#__PURE__*/_jsxDEV(LoginComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n}, _temp)) || _class) || _class);\nexport default LoginContainer;","map":{"version":3,"sources":["D:/workspace/blog/containers/user/loginContainer.tsx"],"names":["React","LoginComponent","inject","observer","LoginContainer","Component","testStore","props","componentDidMount","getApiData","render","console","log","apiData"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;IAQMC,c,WAFLF,MAAM,CAAC,WAAD,C,gBACNC,Q,mBADD,MAEMC,cAFN,SAE6BJ,KAAK,CAACK,SAFnC,CAEmD;AAAA;AAAA;AAAA,SACvCC,SADuC,GAC3B,KAAKC,KAAL,CAAWD,SADgB;AAAA;;AAE9CE,EAAAA,iBAAiB,GAAE;AACf,SAAKF,SAAL,CAAeG,UAAf;AACJ;;AACDC,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,SAAL,CAAeO,OAA3B;AACA,wBACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAV8C,C;AAanD,eAAeT,cAAf","sourcesContent":["import React from 'react';\r\nimport LoginComponent from '../../components/user/login';\r\nimport TestStore from '../../stores/test';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\ninterface Props{\r\n    testStore?:TestStore;\r\n}\r\n\r\n@inject('testStore')\r\n@observer\r\nclass LoginContainer extends React.Component<Props>{\r\n    private testStore = this.props.testStore as TestStore;\r\n     componentDidMount(){\r\n         this.testStore.getApiData();\r\n    }\r\n    render(){\r\n        console.log(this.testStore.apiData);\r\n        return(\r\n            <LoginComponent />\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginContainer;"]},"metadata":{},"sourceType":"module"}