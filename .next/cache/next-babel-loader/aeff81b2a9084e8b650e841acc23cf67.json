{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class, _descriptor, _descriptor2, _temp;\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { action, observable, computed, makeObservable } from 'mobx';\nimport BaseStore from '../BaseStore';\nimport qs from 'qs';\nimport client from '../../lib/client';\nvar UserStore = (_class = (_temp = /*#__PURE__*/function (_BaseStore) {\n  _inherits(UserStore, _BaseStore);\n\n  var _super = _createSuper(UserStore);\n\n  function UserStore() {\n    var _this;\n\n    _classCallCheck(this, UserStore);\n\n    _this = _super.call(this);\n\n    _initializerDefineProperty(_this, \"_checkIdStatus\", _descriptor, _assertThisInitialized(_this));\n\n    _initializerDefineProperty(_this, \"checkId\", _descriptor2, _assertThisInitialized(_this));\n\n    makeObservable(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(UserStore, [{\n    key: \"checkIdStatus\",\n    get: function get() {\n      return this._checkIdStatus;\n    }\n  }]);\n\n  return UserStore;\n}(BaseStore), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_checkIdStatus\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"checkIdStatus\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"checkIdStatus\"), _class.prototype), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"checkId\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this2._init('CHECK_EMAIL_COMPLETE');\n\n                _context.prev = 1;\n                _context.next = 4;\n                return client.post('/api/users/checkId', qs.stringify({\n                  email: email\n                }));\n\n              case 4:\n                res = _context.sent;\n                _context.next = 7;\n                return res.data;\n\n              case 7:\n                _this2._checkIdStatus = _context.sent;\n                _this2._success[\"CHECK_EMAIL_COMPLETE\"] = true;\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                _this2._failure[\"CHECK_EMAIL_COMPLETE\"] = [true, _context.t0];\n\n              case 14:\n                _context.prev = 14;\n                _this2._pending[\"CHECK_EMAIL_COMPLETE\"] = false;\n                return _context.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 11, 14, 17]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n})), _class);\nexport default UserStore;\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["D:/workspace/blog/stores/users/userStore.ts"],"names":["UserStore","BaseStore","makeObservable","observable","computed","action","res","email"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,MAAA,EAAA,UAAA,EAAA,QAAA,EAAA,cAAA,QAAA,MAAA;AAEA,OAAA,SAAA,MAAA,cAAA;AACA,OAAA,EAAA,MAAA,IAAA;AACA,OAAA,MAAA,MAAA,kBAAA;IAEMA,S;;;;;AACF,WAAA,SAAA,GAAc;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AAChB,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA;;AADgB,IAAA,0BAAA,CAAA,KAAA,EAAA,gBAAA,EAAA,WAAA,EAAA,sBAAA,CAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,KAAA,EAAA,SAAA,EAAA,YAAA,EAAA,sBAAA,CAAA,KAAA,CAAA,CAAA;;AAEhBE,IAAAA,cAAc,CAAA,sBAAA,CAAdA,KAAc,CAAA,CAAdA;AAFgB,WAAA,KAAA;AAGb;;;;wBAMkB;AACf,aAAO,KAAP,cAAA;AACH;;;;EAZmBD,S,yFAMnBE,U;;;;;kEAGAC,Q,iKAKAC,M;;;;;;;;0EACS,SAAA,OAAA,CAAA,KAAA,EAAA;AAAA,YAAA,GAAA;AAAA,eAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,iBAAA,CAAA,EAAA;AAAA,oBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,mBAAA,CAAA;AACN,gBAAA,MAAI,CAAJ,KAAA,CAAA,sBAAA;;AADM,gBAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,gBAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,uBAGgB,MAAM,CAAN,IAAA,CAAA,oBAAA,EAAkC,EAAE,CAAF,SAAA,CAAa;AAACE,kBAAAA,KAAK,EAACA;AAAP,iBAAb,CAAlC,CAHhB;;AAAA,mBAAA,CAAA;AAGID,gBAAAA,GAHJ,GAAA,QAAA,CAAA,IAGIA;AAHJ,gBAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,uBAI0BA,GAAG,CAJ7B,IAAA;;AAAA,mBAAA,CAAA;AAIF,gBAAA,MAAI,CAJF,cAIF,GAJE,QAAA,CAAA,IAIF;AACA,gBAAA,MAAI,CAAJ,QAAA,CAAA,sBAAA,IAAA,IAAA;AALE,gBAAA,QAAA,CAAA,IAAA,GAAA,EAAA;AAAA;;AAAA,mBAAA,EAAA;AAAA,gBAAA,QAAA,CAAA,IAAA,GAAA,EAAA;AAAA,gBAAA,QAAA,CAAA,EAAA,GAAA,QAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA;AAOF,gBAAA,MAAI,CAAJ,QAAA,CAAA,sBAAA,IAAwC,CAAA,IAAA,EAAA,QAAA,CAAxC,EAAwC,CAAxC;;AAPE,mBAAA,EAAA;AAAA,gBAAA,QAAA,CAAA,IAAA,GAAA,EAAA;AASF,gBAAA,MAAI,CAAJ,QAAA,CAAA,sBAAA,IAAA,KAAA;AATE,uBAAA,QAAA,CAAA,MAAA,CAAA,EAAA,CAAA;;AAAA,mBAAA,EAAA;AAAA,mBAAA,KAAA;AAAA,uBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,SAAA,EAAA,OAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;AAcd,eAAA,SAAA","sourcesContent":["import {action, observable, computed, makeObservable} from 'mobx';\r\nimport {checkIdStatus} from './types';\r\nimport BaseStore from '../BaseStore';\r\nimport qs from 'qs';\r\nimport client from '../../lib/client';\r\n\r\nclass UserStore extends BaseStore{\r\n    constructor() {\r\n\t\tsuper();\r\n\t\tmakeObservable(this);\r\n    }\r\n    \r\n    @observable\r\n    _checkIdStatus?:checkIdStatus;\r\n\r\n    @computed\r\n    get checkIdStatus(){\r\n        return this._checkIdStatus;\r\n    }\r\n\r\n    @action\r\n    checkId = async(email:string) =>{\r\n        this._init('CHECK_EMAIL_COMPLETE');\r\n        try{\r\n            const res = await client.post('/api/users/checkId', qs.stringify({email:email}));\r\n            this._checkIdStatus = await res.data;\r\n            this._success[\"CHECK_EMAIL_COMPLETE\"] = true;\r\n        } catch(e){\r\n            this._failure[\"CHECK_EMAIL_COMPLETE\"] = [true, e];\r\n        } finally{\r\n            this._pending[\"CHECK_EMAIL_COMPLETE\"] = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default UserStore;"]},"metadata":{},"sourceType":"module"}