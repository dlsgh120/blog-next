{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\nimport { observable } from 'mobx';\nvar BaseStore = (_class = (_temp = /*#__PURE__*/function () {\n  function BaseStore() {\n    _classCallCheck(this, BaseStore);\n\n    _initializerDefineProperty(this, \"_success\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"_pending\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"_failure\", _descriptor3, this);\n  }\n\n  _createClass(BaseStore, [{\n    key: \"_init\",\n    value: function _init(key) {\n      this._pending[key] = true;\n      this._success[key] = false;\n      this._failure[key] = [false, null];\n    }\n  }, {\n    key: \"pending\",\n    get: function get() {\n      return this._pending;\n    }\n  }, {\n    key: \"success\",\n    get: function get() {\n      return this._success;\n    }\n  }, {\n    key: \"failure\",\n    get: function get() {\n      return this._failure;\n    }\n  }]);\n\n  return BaseStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_success\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"_pending\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"_failure\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {};\n  }\n})), _class);\nexport default BaseStore;\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["D:/workspace/blog/stores/BaseStore.ts"],"names":["BaseStore","observable","key"],"mappings":";;;;;;;AAAA,SAAA,UAAA,QAAA,MAAA;IAEMA,S;;;;;;;;;;;;;0BAUQE,G,EAAa;AACzB,WAAA,QAAA,CAAA,GAAA,IAAA,IAAA;AACA,WAAA,QAAA,CAAA,GAAA,IAAA,KAAA;AACA,WAAA,QAAA,CAAA,GAAA,IAAqB,CAAA,KAAA,EAArB,IAAqB,CAArB;AACA;;;wBAEoB;AACpB,aAAO,KAAP,QAAA;AACA;;;wBAEoB;AACpB,aAAO,KAAP,QAAA;AACA;;;wBACoB;AACpB,aAAO,KAAP,QAAA;AACA;;;;qFAxBAD,U;;;;;WAC0B,E;;4EAE1BA,U;;;;;WAC0B,E;;4EAE1BA,U;;;;;WAC0B,E;;;AAoB5B,eAAA,SAAA","sourcesContent":["import { observable } from 'mobx';\r\n\r\nclass BaseStore {\r\n\t@observable\r\n\tpublic _success: Success = {};\r\n\r\n\t@observable\r\n\tpublic _pending: Pending = {};\r\n\r\n\t@observable\r\n\tpublic _failure: Failure = {};\r\n\r\n\tpublic _init(key: string) {\r\n\t\tthis._pending[key] = true;\r\n\t\tthis._success[key] = false;\r\n\t\tthis._failure[key] = [false, null];\r\n\t}\r\n\r\n\tpublic get pending() {\r\n\t\treturn this._pending;\r\n\t}\r\n\r\n\tpublic get success() {\r\n\t\treturn this._success;\r\n\t}\r\n\tpublic get failure() {\r\n\t\treturn this._failure;\r\n\t}\r\n}\r\n\r\nexport default BaseStore;\r\n"]},"metadata":{},"sourceType":"module"}