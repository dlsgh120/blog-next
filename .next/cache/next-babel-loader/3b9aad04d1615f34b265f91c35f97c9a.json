{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\workspace\\\\blog\\\\containers\\\\user\\\\joinContainer.tsx\",\n    _dec,\n    _class,\n    _temp;\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React from 'react';\nimport JoinComponent from '../../components/user/join';\nimport { inject, observer } from 'mobx-react';\nvar JoinContainer = (_dec = inject('userStore'), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(JoinContainer, _React$Component);\n\n  var _super = _createSuper(JoinContainer);\n\n  function JoinContainer() {\n    var _this;\n\n    _classCallCheck(this, JoinContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.userStore = _this.props.userStore;\n\n    _this.checkId = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.userStore.checkId(email);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(JoinContainer, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(JoinComponent, {\n        checkId: this.checkId,\n        checkIdStatus: this.userStore.checkIdStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return JoinContainer;\n}(React.Component), _temp)) || _class) || _class);\nexport default JoinContainer;\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}","map":{"version":3,"sources":["D:/workspace/blog/containers/user/joinContainer.tsx"],"names":["inject","observer","JoinContainer","React","Component","userStore","checkId","checkIdStatus"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,aAAA,MAAA,4BAAA;AACA,SAAA,MAAA,EAAA,QAAA,QAAA,YAAA;IASME,a,WAFLF,MAAM,CAAA,WAAA,C,gBACNC,Q;;;;;;;;;;;;;;;UAEWI,S,GAAY,KAAA,CAAA,KAAA,CAAWA,S;;UAE/BC,O;0EAAU,SAAA,OAAA,CAAA,KAAA,EAAA;AAAA,eAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,iBAAA,CAAA,EAAA;AAAA,oBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,mBAAA,CAAA;AACN,gBAAA,KAAA,CAAA,SAAA,CAAA,OAAA,CAAA,KAAA;;AADM,mBAAA,CAAA;AAAA,mBAAA,KAAA;AAAA,uBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,SAAA,EAAA,OAAA,CAAA;;;;;;;;;;;;;6BAGF;AACJ,aAAA,aACI,OAAA,CAAA,aAAA,EAAA;AACI,QAAA,OAAO,EAAE,KADb,OAAA;AAEI,QAAA,aAAa,EAAE,KAAA,SAAA,CAAeC;AAFlC,OAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,EADJ,IACI,CADJ;AAMH;;;;EAbuBJ,KAAK,CAACC,S,UADjCH,I;AAiBD,eAAA,aAAA","sourcesContent":["import React from 'react';\r\nimport JoinComponent from '../../components/user/join';\r\nimport {inject, observer} from 'mobx-react';\r\nimport UserStore from '../../stores/users';\r\n\r\ninterface Props{\r\n    userStore?:UserStore;\r\n}\r\n\r\n@inject('userStore')\r\n@observer\r\nclass JoinContainer extends React.Component<Props>{\r\n    private userStore = this.props.userStore as UserStore;\r\n\r\n    checkId = async (email:string) =>{\r\n        this.userStore.checkId(email);\r\n    }\r\n    render(){\r\n        return(\r\n            <JoinComponent \r\n                checkId={this.checkId}\r\n                checkIdStatus={this.userStore.checkIdStatus}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default JoinContainer;"]},"metadata":{},"sourceType":"module"}