{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\workspace\\\\blog\\\\containers\\\\user\\\\joinContainer.tsx\",\n    _dec,\n    _class,\n    _temp;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport JoinComponent from '../../components/user/join';\nimport { inject, observer } from 'mobx-react';\nvar JoinContainer = (_dec = inject('userStore'), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(JoinContainer, _React$Component);\n\n  var _super = _createSuper(JoinContainer);\n\n  function JoinContainer() {\n    var _this;\n\n    _classCallCheck(this, JoinContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.userStore = _this.props.userStore;\n    return _this;\n  }\n\n  _createClass(JoinContainer, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(JoinComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return JoinContainer;\n}(React.Component), _temp)) || _class) || _class);\nexport default JoinContainer;","map":{"version":3,"sources":["D:/workspace/blog/containers/user/joinContainer.tsx"],"names":["React","JoinComponent","inject","observer","JoinContainer","userStore","props","Component"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;IASMC,a,WAFLF,MAAM,CAAC,WAAD,C,gBACNC,Q;;;;;;;;;;;;;;;UAEWE,S,GAAY,MAAKC,KAAL,CAAWD,S;;;;;;6BACvB;AACJ,0BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;;;EANuBL,KAAK,CAACO,S;AASlC,eAAeH,aAAf","sourcesContent":["import React from 'react';\r\nimport JoinComponent from '../../components/user/join';\r\nimport {inject, observer} from 'mobx-react';\r\nimport UserStore from '../../stores/users';\r\n\r\ninterface Props{\r\n    userStore?:UserStore;\r\n}\r\n\r\n@inject('userStore')\r\n@observer\r\nclass JoinContainer extends React.Component<Props>{\r\n    private userStore = this.props.userStore as UserStore;\r\n    render(){\r\n        return(\r\n            <JoinComponent />\r\n        );\r\n    }\r\n}\r\n\r\nexport default JoinContainer;"]},"metadata":{},"sourceType":"module"}